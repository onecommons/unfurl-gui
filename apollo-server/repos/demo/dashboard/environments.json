{
  "DeploymentEnvironment": {
    "production-gcp": {
      "connections": {
        "primary_provider": {
          "type": "unfurl.relationships.ConnectsTo.GoogleCloudProject",
          "name": "primary_provider",
          "title": "primary_provider",
          "description": "",
          "directives": [],
          "properties": [],
          "dependencies": []
        }
      },
      "primary_provider": {
        "type": "unfurl.relationships.ConnectsTo.GoogleCloudProject",
        "name": "primary_provider",
        "title": "primary_provider",
        "description": "",
        "directives": [],
        "properties": [],
        "dependencies": []
      },
      "instances": {},
      "repositories": {
        "types": {
          "url": "https://gitlab.com/onecommons/unfurl-types"
        }
      },
      "name": "production-gcp"
    },
    "staging-aws": {
      "connections": {
        "primary_provider": {
          "type": "unfurl.relationships.ConnectsTo.AWSAccount",
          "name": "primary_provider",
          "title": "primary_provider",
          "description": "",
          "directives": [],
          "properties": [],
          "dependencies": []
        }
      },
      "primary_provider": {
        "type": "unfurl.relationships.ConnectsTo.AWSAccount",
        "name": "primary_provider",
        "title": "primary_provider",
        "description": "",
        "directives": [],
        "properties": [],
        "dependencies": []
      },
      "instances": {},
      "repositories": {
        "types": {
          "url": "https://gitlab.com/onecommons/unfurl-types"
        }
      },
      "name": "staging-aws"
    },
    "defaults": {
      "connections": {},
      "primary_provider": null,
      "instances": {},
      "repositories": {
        "types": {
          "url": "https://gitlab.com/onecommons/unfurl-types"
        }
      },
      "name": "defaults"
    },
    "home": {
      "connections": {},
      "primary_provider": null,
      "instances": {},
      "repositories": {
        "types": {
          "url": "https://gitlab.com/onecommons/unfurl-types"
        }
      },
      "name": "home"
    }
  },
  "ResourceType": {
    "unfurl.relationships.ConnectsTo.GoogleCloudProject": {
      "name": "unfurl.relationships.ConnectsTo.GoogleCloudProject",
      "title": "GoogleCloudProject",
      "description": "",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {
          "scopes": {
            "title": "scopes",
            "type": "array",
            "items": {
              "required": true,
              "type": "string"
            }
          }
        }
      },
      "extends": [
        "unfurl.relationships.ConnectsTo.GoogleCloudProject",
        "unfurl.relationships.ConnectsTo.CloudAccount",
        "tosca.relationships.ConnectsTo",
        "tosca.relationships.Root"
      ]
    },
    "unfurl.relationships.ConnectsTo.AWSAccount": {
      "name": "unfurl.relationships.ConnectsTo.AWSAccount",
      "title": "AWSAccount",
      "description": "",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {
          "endpoints": {
            "title": "endpoints",
            "description": "custom service endpoints",
            "type": "object"
          }
        }
      },
      "extends": [
        "unfurl.relationships.ConnectsTo.AWSAccount",
        "unfurl.relationships.ConnectsTo.CloudAccount",
        "tosca.relationships.ConnectsTo",
        "tosca.relationships.Root"
      ]
    },
    "unfurl.nodes.DNSZone": {
      "name": "unfurl.nodes.DNSZone",
      "title": "DNS Zone",
      "description": "",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "required": true,
            "description": "DNS name of the zone (end with .)",
            "type": "string"
          },
          "provider": {
            "title": "provider",
            "required": true,
            "description": "OctoDNS provider configuration",
            "sensitive": true,
            "type": "object"
          }
        }
      },
      "extends": [
        "unfurl.nodes.DNSZone",
        "tosca.nodes.Root",
        "unfurl.capabilities.DNSZone",
        "tosca.capabilities.Root",
        "tosca.capabilities.Node"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {
          "zone": {
            "title": "zone",
            "required": true,
            "description": "The records found in the zone",
            "type": "object"
          },
          "managed_records": {
            "title": "managed_records",
            "description": "The records in the zone that are managed by this instance",
            "type": "object"
          }
        }
      },
      "requirements": [
        {
          "name": "parent_zone",
          "title": "parent_zone",
          "description": "",
          "visibility": "hidden",
          "min": 0,
          "max": 1,
          "match": null,
          "resourceType": "unfurl.capabilities.DNSZone"
        }
      ],
      "implementations": [],
      "implementation_requirements": []
    },
    "tosca.nodes.Root": {
      "name": "tosca.nodes.Root",
      "title": "Root",
      "description": "The TOSCA root node all other TOSCA base node types derive from.\n",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {}
      },
      "extends": [
        "tosca.nodes.Root",
        "tosca.capabilities.Node",
        "tosca.capabilities.Root"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {}
      },
      "requirements": [],
      "implementations": [],
      "implementation_requirements": []
    },
    "unfurl.relationships.DNSRecords": {
      "name": "unfurl.relationships.DNSRecords",
      "title": "DNSRecords",
      "description": "",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {
          "records": {
            "title": "records",
            "required": true,
            "type": "object"
          }
        }
      },
      "extends": [
        "unfurl.relationships.DNSRecords",
        "tosca.relationships.Root"
      ]
    },
    "tosca.relationships.Root": {
      "name": "tosca.relationships.Root",
      "title": "Root",
      "description": "The TOSCA root Relationship Type all other TOSCA base Relationship Types derive from.\n",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {}
      },
      "extends": [
        "tosca.relationships.Root"
      ]
    },
    "unfurl.nodes.Installer.Terraform": {
      "name": "unfurl.nodes.Installer.Terraform",
      "title": "Terraform",
      "description": "",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {}
      },
      "extends": [
        "unfurl.nodes.Installer.Terraform",
        "unfurl.nodes.Installer",
        "tosca.nodes.Root",
        "unfurl.capabilities.Installer",
        "tosca.capabilities.Root",
        "tosca.capabilities.Node"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {}
      },
      "requirements": [],
      "implementations": [],
      "implementation_requirements": []
    },
    "unfurl.nodes.Installer": {
      "name": "unfurl.nodes.Installer",
      "title": "Installer",
      "description": "",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {}
      },
      "extends": [
        "unfurl.nodes.Installer",
        "tosca.nodes.Root",
        "unfurl.capabilities.Installer",
        "tosca.capabilities.Root",
        "tosca.capabilities.Node"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {}
      },
      "requirements": [],
      "implementations": [],
      "implementation_requirements": []
    },
    "unfurl.nodes.Container.Application.Docker": {
      "name": "unfurl.nodes.Container.Application.Docker",
      "title": "Docker",
      "description": "",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {
          "container": {
            "title": "container",
            "$toscatype": "unfurl.datatypes.DockerContainer",
            "type": "object",
            "properties": {
              "environment": {
                "title": "environment",
                "default": {},
                "required": true,
                "type": "object",
                "additionalProperties": {
                  "required": true,
                  "type": "string"
                }
              },
              "container_name": {
                "title": "container_name",
                "type": "string"
              },
              "image": {
                "title": "image",
                "type": "string"
              },
              "command": {
                "title": "command",
                "$toscatype": "any",
                "type": "string"
              },
              "volumes": {
                "title": "volumes",
                "type": "array",
                "items": {
                  "required": true,
                  "type": "string"
                }
              },
              "ports": {
                "title": "ports",
                "type": "array",
                "items": {
                  "required": true,
                  "type": "string"
                }
              },
              "expose": {
                "title": "expose",
                "type": "array",
                "items": {
                  "required": true,
                  "type": "string"
                }
              },
              "entrypoint": {
                "title": "entrypoint",
                "type": "array",
                "items": {
                  "required": true,
                  "type": "string"
                }
              },
              "$toscatype": {
                "const": "unfurl.datatypes.DockerContainer"
              }
            }
          }
        }
      },
      "extends": [
        "unfurl.nodes.Container.Application.Docker",
        "tosca.nodes.Root",
        "tosca.capabilities.Node",
        "tosca.capabilities.Root"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {}
      },
      "requirements": [],
      "implementations": [],
      "implementation_requirements": []
    },
    "unfurl.nodes.AWSMetadata": {
      "name": "unfurl.nodes.AWSMetadata",
      "title": "AWSMetadata",
      "description": "",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {}
      },
      "extends": [
        "unfurl.nodes.AWSMetadata",
        "tosca.nodes.Root",
        "tosca.capabilities.Node",
        "tosca.capabilities.Root"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {
          "machine_types": {
            "title": "machine_types",
            "required": true,
            "type": "object"
          }
        }
      },
      "requirements": [],
      "implementations": [
        "configure"
      ],
      "implementation_requirements": [
        "unfurl.relationships.ConnectsTo.AWSAccount"
      ]
    },
    "unfurl.nodes.AMIBootImage": {
      "name": "unfurl.nodes.AMIBootImage",
      "title": "AMIBootImage",
      "description": "",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "title": "owner",
            "required": true,
            "type": "string"
          },
          "name_regex": {
            "title": "name_regex",
            "required": true,
            "type": "string"
          }
        }
      },
      "extends": [
        "unfurl.nodes.AMIBootImage",
        "unfurl.nodes.BootImage",
        "unfurl.nodes.Configuration",
        "tosca.nodes.Root",
        "unfurl.capabilities.Configuration",
        "tosca.capabilities.Root",
        "tosca.capabilities.Node"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {
          "boot_image": {
            "title": "boot_image",
            "required": true,
            "type": "string"
          }
        }
      },
      "requirements": [
        {
          "name": "configures",
          "title": "configures",
          "description": "",
          "min": 0,
          "max": 1,
          "match": null,
          "resourceType": "tosca.nodes.Root"
        }
      ],
      "implementations": [
        "configure"
      ],
      "implementation_requirements": [
        "unfurl.relationships.ConnectsTo.AWSAccount"
      ]
    },
    "unfurl.nodes.BootImage": {
      "name": "unfurl.nodes.BootImage",
      "title": "BootImage",
      "description": "",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {}
      },
      "extends": [
        "unfurl.nodes.BootImage",
        "unfurl.nodes.Configuration",
        "tosca.nodes.Root",
        "unfurl.capabilities.Configuration",
        "tosca.capabilities.Root",
        "tosca.capabilities.Node"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {
          "boot_image": {
            "title": "boot_image",
            "required": true,
            "type": "string"
          }
        }
      },
      "requirements": [
        {
          "name": "configures",
          "title": "configures",
          "description": "",
          "min": 0,
          "max": 1,
          "match": null,
          "resourceType": "tosca.nodes.Root"
        }
      ],
      "implementations": [],
      "implementation_requirements": []
    },
    "unfurl.nodes.Configuration": {
      "name": "unfurl.nodes.Configuration",
      "title": "Configuration",
      "description": "",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {}
      },
      "extends": [
        "unfurl.nodes.Configuration",
        "tosca.nodes.Root",
        "unfurl.capabilities.Configuration",
        "tosca.capabilities.Root",
        "tosca.capabilities.Node"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {}
      },
      "requirements": [
        {
          "name": "configures",
          "title": "configures",
          "description": "",
          "min": 0,
          "max": 1,
          "match": null,
          "resourceType": "tosca.nodes.Root"
        }
      ],
      "implementations": [],
      "implementation_requirements": []
    },
    "unfurl.nodes.EC2Compute": {
      "name": "unfurl.nodes.EC2Compute",
      "title": "EC2 Instance",
      "description": "",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {
          "key_name": {
            "title": "Key name",
            "description": "Name of your AWS ssh key pair. Set if you want to be able to SSH into this instance.",
            "type": "string"
          },
          "num_cpus": {
            "title": "CPUs",
            "required": true,
            "description": "Number of CPUs for the server",
            "$toscatype": "integer",
            "type": "number",
            "minimum": 1,
            "maximum": 8
          },
          "mem_size": {
            "title": "Memory",
            "required": true,
            "description": "Amount of RAM (in MB)",
            "default_unit": "MB",
            "$toscatype": "scalar-unit.size",
            "type": "number",
            "minimum": 1000,
            "maximum": 20000
          },
          "disk_size": {
            "title": "Storage",
            "required": true,
            "description": "Size of boot disk (in GB)",
            "default_unit": "GB",
            "$toscatype": "scalar-unit.size",
            "type": "number",
            "minimum": 10,
            "maximum": 2000
          }
        }
      },
      "extends": [
        "unfurl.nodes.EC2Compute",
        "unfurl.nodes.Compute",
        "unfurl.nodes.ServiceHost",
        "tosca.nodes.Root",
        "tosca.capabilities.Node",
        "tosca.capabilities.Root"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {}
      },
      "requirements": [
        {
          "name": "host",
          "title": "host",
          "description": "",
          "min": 0,
          "max": 1,
          "match": null,
          "resourceType": "unfurl.nodes.ServiceHost"
        }
      ],
      "implementations": [
        "check",
        "create",
        "default",
        "delete"
      ],
      "implementation_requirements": [
        "unfurl.relationships.ConnectsTo.AWSAccount"
      ]
    },
    "unfurl.nodes.Compute": {
      "name": "unfurl.nodes.Compute",
      "title": "Compute",
      "description": "",
      "badge": "Compute",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {
          "num_cpus": {
            "title": "CPUs",
            "required": true,
            "description": "Number of CPUs for the server",
            "$toscatype": "integer",
            "type": "number",
            "minimum": 1,
            "maximum": 8
          },
          "mem_size": {
            "title": "Memory",
            "required": true,
            "description": "Amount of RAM (in MB)",
            "default_unit": "MB",
            "$toscatype": "scalar-unit.size",
            "type": "number",
            "minimum": 1000,
            "maximum": 20000
          },
          "disk_size": {
            "title": "Storage",
            "required": true,
            "description": "Size of boot disk (in GB)",
            "default_unit": "GB",
            "$toscatype": "scalar-unit.size",
            "type": "number",
            "minimum": 10,
            "maximum": 2000
          }
        }
      },
      "extends": [
        "unfurl.nodes.Compute",
        "unfurl.nodes.ServiceHost",
        "tosca.nodes.Root",
        "tosca.capabilities.Node",
        "tosca.capabilities.Root"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {}
      },
      "requirements": [
        {
          "name": "host",
          "title": "host",
          "description": "",
          "min": 0,
          "max": 1,
          "match": null,
          "resourceType": "unfurl.nodes.ServiceHost"
        }
      ],
      "implementations": [],
      "implementation_requirements": []
    },
    "unfurl.nodes.ServiceHost": {
      "name": "unfurl.nodes.ServiceHost",
      "title": "ServiceHost",
      "description": "Addressable instance that hosts services",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {}
      },
      "extends": [
        "unfurl.nodes.ServiceHost",
        "tosca.nodes.Root",
        "tosca.capabilities.Node",
        "tosca.capabilities.Root"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {}
      },
      "requirements": [
        {
          "name": "host",
          "title": "host",
          "description": "",
          "min": 0,
          "max": 1,
          "match": null,
          "resourceType": "unfurl.nodes.ServiceHost"
        }
      ],
      "implementations": [],
      "implementation_requirements": []
    },
    "unfurl.nodes.GCPMetadata": {
      "name": "unfurl.nodes.GCPMetadata",
      "title": "GCPMetadata",
      "description": "",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {}
      },
      "extends": [
        "unfurl.nodes.GCPMetadata",
        "tosca.nodes.Root",
        "tosca.capabilities.Node",
        "tosca.capabilities.Root"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {
          "machine_types": {
            "title": "machine_types",
            "required": true,
            "type": "object"
          }
        }
      },
      "requirements": [],
      "implementations": [
        "configure"
      ],
      "implementation_requirements": [
        "unfurl.relationships.ConnectsTo.GoogleCloudProject"
      ]
    },
    "unfurl.nodes.GCPBootImage": {
      "name": "unfurl.nodes.GCPBootImage",
      "title": "GCPBootImage",
      "description": "",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {
          "project": {
            "title": "project",
            "required": true,
            "type": "string"
          },
          "family": {
            "title": "family",
            "required": true,
            "type": "string"
          }
        }
      },
      "extends": [
        "unfurl.nodes.GCPBootImage",
        "unfurl.nodes.BootImage",
        "unfurl.nodes.Configuration",
        "tosca.nodes.Root",
        "unfurl.capabilities.Configuration",
        "tosca.capabilities.Root",
        "tosca.capabilities.Node"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {
          "boot_image": {
            "title": "boot_image",
            "required": true,
            "type": "string"
          }
        }
      },
      "requirements": [
        {
          "name": "configures",
          "title": "configures",
          "description": "",
          "min": 0,
          "max": 1,
          "match": null,
          "resourceType": "tosca.nodes.Root"
        }
      ],
      "implementations": [
        "configure"
      ],
      "implementation_requirements": [
        "unfurl.relationships.ConnectsTo.GoogleCloudProject"
      ]
    },
    "unfurl.nodes.GCPComputeInstance": {
      "name": "unfurl.nodes.GCPComputeInstance",
      "title": "GCP Compute Engine Instance",
      "description": "",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {
          "num_cpus": {
            "title": "CPUs",
            "required": true,
            "description": "Number of CPUs for the server",
            "$toscatype": "integer",
            "type": "number",
            "minimum": 1,
            "maximum": 8
          },
          "mem_size": {
            "title": "Memory",
            "required": true,
            "description": "Amount of RAM (in MB)",
            "default_unit": "MB",
            "$toscatype": "scalar-unit.size",
            "type": "number",
            "minimum": 1000,
            "maximum": 20000
          },
          "disk_size": {
            "title": "Storage",
            "required": true,
            "description": "Size of boot disk (in GB)",
            "default_unit": "GB",
            "$toscatype": "scalar-unit.size",
            "type": "number",
            "minimum": 10,
            "maximum": 2000
          }
        }
      },
      "extends": [
        "unfurl.nodes.GCPComputeInstance",
        "unfurl.nodes.Compute",
        "unfurl.nodes.ServiceHost",
        "tosca.nodes.Root",
        "tosca.capabilities.Node",
        "tosca.capabilities.Root"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {}
      },
      "requirements": [
        {
          "name": "host",
          "title": "host",
          "description": "",
          "min": 0,
          "max": 1,
          "match": null,
          "resourceType": "unfurl.nodes.ServiceHost"
        }
      ],
      "implementations": [
        "check",
        "create",
        "default",
        "delete"
      ],
      "implementation_requirements": [
        "unfurl.relationships.ConnectsTo.GoogleCloudProject"
      ]
    },
    "unfurl.nodes.ServiceEndpoint": {
      "name": "unfurl.nodes.ServiceEndpoint",
      "title": "ServiceEndpoint",
      "description": "A service running on a port and ip address endpoint",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {
          "subdomain": {
            "title": "subdomain",
            "description": "Subdomain to associate this endpoint with.",
            "type": "string"
          },
          "portspec": {
            "title": "portspec",
            "required": true,
            "description": "Ports the service should be running on.",
            "$toscatype": "tosca.datatypes.network.PortSpec",
            "type": "string"
          }
        }
      },
      "extends": [
        "unfurl.nodes.ServiceEndpoint",
        "tosca.nodes.Root",
        "tosca.capabilities.Node",
        "tosca.capabilities.Root"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {}
      },
      "requirements": [
        {
          "name": "host",
          "title": "host",
          "description": "",
          "min": 1,
          "max": 1,
          "match": null,
          "resourceType": "unfurl.nodes.ServiceHost"
        }
      ],
      "implementations": [],
      "implementation_requirements": []
    },
    "unfurl.nodes.ContainerService": {
      "name": "unfurl.nodes.ContainerService",
      "title": "ContainerService",
      "description": "A service that runs a Docker (OCI) image or Docker Compose file",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {
          "container": {
            "title": "container",
            "$toscatype": "unfurl.datatypes.DockerContainer",
            "type": "object",
            "properties": {
              "environment": {
                "title": "environment",
                "default": {},
                "required": true,
                "type": "object",
                "additionalProperties": {
                  "required": true,
                  "type": "string"
                }
              },
              "container_name": {
                "title": "container_name",
                "type": "string"
              },
              "image": {
                "title": "image",
                "type": "string"
              },
              "command": {
                "title": "command",
                "$toscatype": "any",
                "type": "string"
              },
              "volumes": {
                "title": "volumes",
                "type": "array",
                "items": {
                  "required": true,
                  "type": "string"
                }
              },
              "ports": {
                "title": "ports",
                "type": "array",
                "items": {
                  "required": true,
                  "type": "string"
                }
              },
              "expose": {
                "title": "expose",
                "type": "array",
                "items": {
                  "required": true,
                  "type": "string"
                }
              },
              "entrypoint": {
                "title": "entrypoint",
                "type": "array",
                "items": {
                  "required": true,
                  "type": "string"
                }
              },
              "$toscatype": {
                "const": "unfurl.datatypes.DockerContainer"
              }
            }
          },
          "subdomain": {
            "title": "subdomain",
            "description": "Subdomain to associate this endpoint with.",
            "type": "string"
          }
        }
      },
      "extends": [
        "unfurl.nodes.ContainerService",
        "unfurl.nodes.ServiceEndpoint",
        "tosca.nodes.Root",
        "tosca.capabilities.Node",
        "tosca.capabilities.Root"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {}
      },
      "requirements": [
        {
          "name": "host",
          "title": "host",
          "description": "",
          "min": 1,
          "max": 1,
          "match": null,
          "resourceType": "unfurl.nodes.DockerHost"
        }
      ],
      "implementations": [
        "create"
      ],
      "implementation_requirements": []
    },
    "unfurl.nodes.App": {
      "name": "unfurl.nodes.App",
      "title": "App",
      "description": "User-facing application composed of one or more services",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {}
      },
      "extends": [
        "unfurl.nodes.App",
        "tosca.nodes.Root",
        "tosca.capabilities.Node",
        "tosca.capabilities.Root"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {
          "url": {
            "title": "url",
            "required": true,
            "type": "string"
          }
        }
      },
      "requirements": [],
      "implementations": [],
      "implementation_requirements": []
    },
    "unfurl.nodes.ContainerApp": {
      "name": "unfurl.nodes.ContainerApp",
      "title": "ContainerApp",
      "description": "",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {}
      },
      "extends": [
        "unfurl.nodes.ContainerApp",
        "unfurl.nodes.App",
        "tosca.nodes.Root",
        "tosca.capabilities.Node",
        "tosca.capabilities.Root"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {}
      },
      "requirements": [
        {
          "name": "container",
          "title": "container",
          "description": "",
          "min": 1,
          "max": 1,
          "match": null,
          "resourceType": "unfurl.nodes.ContainerService"
        }
      ],
      "implementations": [],
      "implementation_requirements": []
    },
    "unfurl.nodes.WebApp": {
      "name": "unfurl.nodes.WebApp",
      "title": "WebApp",
      "description": "An app exposed through https",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {
          "subdomain": {
            "title": "Subdomain",
            "default": "www",
            "required": true,
            "user_settable": true,
            "type": "string"
          }
        }
      },
      "extends": [
        "unfurl.nodes.WebApp",
        "unfurl.nodes.ContainerApp",
        "unfurl.nodes.App",
        "tosca.nodes.Root",
        "tosca.capabilities.Node",
        "tosca.capabilities.Root"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {}
      },
      "requirements": [
        {
          "name": "container",
          "title": "container",
          "description": "",
          "min": 1,
          "max": 1,
          "match": null,
          "resourceType": "unfurl.nodes.ContainerService"
        }
      ],
      "implementations": [],
      "implementation_requirements": []
    },
    "unfurl.nodes.DockerHost": {
      "name": "unfurl.nodes.DockerHost",
      "title": "DockerHost",
      "description": "",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {}
      },
      "extends": [
        "unfurl.nodes.DockerHost",
        "unfurl.nodes.ServiceHost",
        "tosca.nodes.Root",
        "tosca.capabilities.Node",
        "tosca.capabilities.Root"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {}
      },
      "requirements": [
        {
          "name": "host",
          "title": "host",
          "description": "",
          "min": 0,
          "max": 1,
          "match": null,
          "resourceType": "unfurl.nodes.ServiceHost"
        }
      ],
      "implementations": [],
      "implementation_requirements": []
    },
    "unfurl.nodes.LocalDockerHost": {
      "name": "unfurl.nodes.LocalDockerHost",
      "title": "LocalDockerHost",
      "description": "Runs the container on your local Docker engine",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {}
      },
      "extends": [
        "unfurl.nodes.LocalDockerHost",
        "unfurl.nodes.Container.Application.Docker",
        "tosca.nodes.Root",
        "unfurl.nodes.DockerHost",
        "unfurl.nodes.ServiceHost",
        "tosca.capabilities.Node",
        "tosca.capabilities.Root"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {}
      },
      "requirements": [
        {
          "name": "host",
          "title": "host",
          "description": "",
          "min": 0,
          "max": 1,
          "match": null,
          "resourceType": "unfurl.nodes.ServiceHost"
        }
      ],
      "implementations": [
        "check",
        "configure",
        "default",
        "delete",
        "start",
        "stop"
      ],
      "implementation_requirements": []
    },
    "unfurl.nodes.DockerComputeHost": {
      "name": "unfurl.nodes.DockerComputeHost",
      "title": "DockerComputeHost",
      "description": "Configure cloud init to run a Docker environment",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {}
      },
      "extends": [
        "unfurl.nodes.DockerComputeHost",
        "unfurl.nodes.DockerHost",
        "unfurl.nodes.ServiceHost",
        "tosca.nodes.Root",
        "tosca.capabilities.Node",
        "tosca.capabilities.Root"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {
          "user_data": {
            "title": "User Data",
            "required": true,
            "type": "string"
          }
        }
      },
      "requirements": [
        {
          "name": "host",
          "title": "Compute",
          "description": "A compute instance with at least 512MB RAM",
          "min": 1,
          "max": 1,
          "match": null,
          "resourceType": "unfurl.nodes.Compute",
          "node_filter": {
            "properties": [
              {
                "user_data": {
                  "eval": ".configured_by::user_data"
                }
              },
              {
                "portspec": {
                  "eval": ".configured_by::portspec"
                }
              }
            ]
          }
        }
      ],
      "implementations": [],
      "implementation_requirements": []
    },
    "unfurl.nodes.TraefikDockerComputeHost": {
      "name": "unfurl.nodes.TraefikDockerComputeHost",
      "title": "Traefik Docker Compute Host",
      "description": "Configure cloud init to run a Docker environment fronted by Trafik serving HTTPS",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {}
      },
      "extends": [
        "unfurl.nodes.TraefikDockerComputeHost",
        "unfurl.nodes.DockerComputeHost",
        "unfurl.nodes.DockerHost",
        "unfurl.nodes.ServiceHost",
        "tosca.nodes.Root",
        "tosca.capabilities.Node",
        "tosca.capabilities.Root"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {
          "user_data": {
            "title": "User Data",
            "required": true,
            "type": "string"
          }
        }
      },
      "requirements": [
        {
          "name": "dns",
          "title": "DNS",
          "description": "DNS provider for domain name configuration",
          "min": 1,
          "max": 1,
          "match": null,
          "resourceType": "unfurl.nodes.DNSZone"
        },
        {
          "name": "host",
          "title": "Compute",
          "description": "A compute instance with at least 512MB RAM",
          "min": 1,
          "max": 1,
          "match": null,
          "resourceType": "unfurl.nodes.Compute",
          "node_filter": {
            "properties": [
              {
                "user_data": {
                  "eval": ".configured_by::user_data"
                }
              },
              {
                "portspec": {
                  "eval": ".configured_by::portspec"
                }
              }
            ]
          }
        }
      ],
      "implementations": [
        "configure"
      ],
      "implementation_requirements": []
    },
    "Route53DNSZone": {
      "name": "Route53DNSZone",
      "title": "Amazon Web Services DNS",
      "description": "Amazon Web Services Route53 DNS provider for domain name configuration",
      "badge": "DNS",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {
          "secret_access_key": {
            "title": "Secret access key",
            "required": true,
            "sensitive": true,
            "user_settable": true,
            "type": "string"
          },
          "name": {
            "title": "name",
            "required": true,
            "description": "DNS name of the zone (end with .)",
            "type": "string"
          }
        }
      },
      "extends": [
        "Route53DNSZone",
        "unfurl.nodes.DNSZone",
        "tosca.nodes.Root",
        "unfurl.capabilities.DNSZone",
        "tosca.capabilities.Root",
        "tosca.capabilities.Node"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {
          "zone": {
            "title": "zone",
            "required": true,
            "description": "The records found in the zone",
            "type": "object"
          },
          "managed_records": {
            "title": "managed_records",
            "description": "The records in the zone that are managed by this instance",
            "type": "object"
          }
        }
      },
      "requirements": [
        {
          "name": "parent_zone",
          "title": "parent_zone",
          "description": "",
          "visibility": "hidden",
          "min": 0,
          "max": 1,
          "match": null,
          "resourceType": "unfurl.capabilities.DNSZone"
        }
      ],
      "implementations": [
        "check",
        "configure",
        "connect",
        "default",
        "delete"
      ],
      "implementation_requirements": []
    },
    "DigitalOceanDNSZone": {
      "name": "DigitalOceanDNSZone",
      "title": "DigitalOcean DNS",
      "description": "Digitial Ocean DNS provider for domain name configuration",
      "badge": "DNS",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {
          "DIGITALOCEAN_TOKEN": {
            "title": "DigitalOcean Personal Access Token",
            "required": true,
            "description": "An API token for your DigitalOcean account.",
            "sensitive": true,
            "user_settable": true,
            "type": "string"
          },
          "name": {
            "title": "name",
            "required": true,
            "description": "DNS name of the zone (end with .)",
            "type": "string"
          }
        }
      },
      "extends": [
        "DigitalOceanDNSZone",
        "unfurl.nodes.DNSZone",
        "tosca.nodes.Root",
        "unfurl.capabilities.DNSZone",
        "tosca.capabilities.Root",
        "tosca.capabilities.Node"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {
          "zone": {
            "title": "zone",
            "required": true,
            "description": "The records found in the zone",
            "type": "object"
          },
          "managed_records": {
            "title": "managed_records",
            "description": "The records in the zone that are managed by this instance",
            "type": "object"
          }
        }
      },
      "requirements": [
        {
          "name": "parent_zone",
          "title": "parent_zone",
          "description": "",
          "visibility": "hidden",
          "min": 0,
          "max": 1,
          "match": null,
          "resourceType": "unfurl.capabilities.DNSZone"
        }
      ],
      "implementations": [
        "check",
        "configure",
        "connect",
        "default",
        "delete"
      ],
      "implementation_requirements": []
    },
    "GoogleCloudDNSZone": {
      "name": "GoogleCloudDNSZone",
      "title": "Google Cloud DNS",
      "description": "Google Cloud DNS provider for domain name configuration",
      "badge": "DNS",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "required": true,
            "description": "DNS name of the zone (end with .)",
            "type": "string"
          }
        }
      },
      "extends": [
        "GoogleCloudDNSZone",
        "unfurl.nodes.DNSZone",
        "tosca.nodes.Root",
        "unfurl.capabilities.DNSZone",
        "tosca.capabilities.Root",
        "tosca.capabilities.Node"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {
          "zone": {
            "title": "zone",
            "required": true,
            "description": "The records found in the zone",
            "type": "object"
          },
          "managed_records": {
            "title": "managed_records",
            "description": "The records in the zone that are managed by this instance",
            "type": "object"
          }
        }
      },
      "requirements": [
        {
          "name": "parent_zone",
          "title": "parent_zone",
          "description": "",
          "visibility": "hidden",
          "min": 0,
          "max": 1,
          "match": null,
          "resourceType": "unfurl.capabilities.DNSZone"
        }
      ],
      "implementations": [
        "check",
        "configure",
        "connect",
        "default",
        "delete"
      ],
      "implementation_requirements": []
    },
    "unfurl.nodes.MongoDBWebApp": {
      "name": "unfurl.nodes.MongoDBWebApp",
      "title": "MongoDBWebApp",
      "description": "A web app that uses MongoDB",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {
          "subdomain": {
            "title": "Subdomain",
            "default": "www",
            "required": true,
            "user_settable": true,
            "type": "string"
          }
        }
      },
      "extends": [
        "unfurl.nodes.MongoDBWebApp",
        "unfurl.nodes.WebApp",
        "unfurl.nodes.ContainerApp",
        "unfurl.nodes.App",
        "tosca.nodes.Root",
        "tosca.capabilities.Node",
        "tosca.capabilities.Root"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {}
      },
      "requirements": [
        {
          "name": "db",
          "title": "Database",
          "description": "MongoDB database service",
          "min": 1,
          "max": 1,
          "match": null,
          "resourceType": "MongoDB"
        },
        {
          "name": "container",
          "title": "container",
          "description": "",
          "min": 1,
          "max": 1,
          "match": null,
          "resourceType": "unfurl.nodes.ContainerService"
        }
      ],
      "implementations": [
        "create"
      ],
      "implementation_requirements": []
    },
    "unfurl.nodes.SoftwareService": {
      "name": "unfurl.nodes.SoftwareService",
      "title": "SoftwareService",
      "description": "",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {
          "software_version": {
            "title": "Software Version",
            "type": "string"
          }
        }
      },
      "extends": [
        "unfurl.nodes.SoftwareService",
        "tosca.nodes.Root",
        "tosca.capabilities.Node",
        "tosca.capabilities.Root"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {}
      },
      "requirements": [],
      "implementations": [],
      "implementation_requirements": []
    },
    "MongoDB": {
      "name": "MongoDB",
      "title": "MongoDB",
      "description": "",
      "badge": "Database",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {}
      },
      "extends": [
        "MongoDB",
        "unfurl.nodes.SoftwareService",
        "tosca.nodes.Root",
        "tosca.capabilities.Node",
        "tosca.capabilities.Root"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {}
      },
      "requirements": [],
      "implementations": [],
      "implementation_requirements": []
    },
    "AtlasService": {
      "name": "AtlasService",
      "title": "MongoDB Atlas Service",
      "description": "",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {
          "public_key": {
            "title": "Public Key",
            "required": true,
            "description": "Public API key to authenticate Atlas",
            "type": "string"
          },
          "private_key": {
            "title": "Private Key",
            "required": true,
            "description": "Private API key to authenticate Atlas",
            "sensitive": true,
            "type": "string"
          }
        }
      },
      "extends": [
        "AtlasService",
        "MongoDB",
        "unfurl.nodes.SoftwareService",
        "tosca.nodes.Root",
        "unfurl.nodes.Installer.Terraform",
        "unfurl.nodes.Installer",
        "tosca.capabilities.Node",
        "tosca.capabilities.Root",
        "unfurl.capabilities.Installer"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {}
      },
      "requirements": [],
      "implementations": [
        "configure",
        "default",
        "delete"
      ],
      "implementation_requirements": []
    },
    "MongoDBInstance": {
      "name": "MongoDBInstance",
      "title": "Self-hosted MongoDB",
      "description": "",
      "badge": "Database",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {}
      },
      "extends": [
        "MongoDBInstance",
        "MongoDB",
        "unfurl.nodes.SoftwareService",
        "tosca.nodes.Root",
        "unfurl.nodes.ContainerApp",
        "unfurl.nodes.App",
        "tosca.capabilities.Node",
        "tosca.capabilities.Root"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {}
      },
      "requirements": [
        {
          "name": "container",
          "title": "container",
          "description": "",
          "visibility": "hidden",
          "min": 1,
          "max": 1,
          "match": "bitnami_mongodb_container_service",
          "resourceType": "unfurl.nodes.ContainerService"
        }
      ],
      "implementations": [
        "create"
      ],
      "implementation_requirements": []
    },
    "Mail": {
      "name": "Mail",
      "title": "Mail Server",
      "description": "Mail server to use for sending mail",
      "badge": "Mail",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {}
      },
      "extends": [
        "Mail",
        "tosca.nodes.Root",
        "tosca.capabilities.Node",
        "tosca.capabilities.Root"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {}
      },
      "requirements": [],
      "implementations": [],
      "implementation_requirements": []
    },
    "SendGrid": {
      "name": "SendGrid",
      "title": "SendGrid",
      "description": "Use sendgrid.com to send mail.",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {
          "user_name": {
            "title": "Username",
            "required": true,
            "type": "string"
          },
          "key": {
            "title": "key",
            "required": true,
            "type": "string"
          },
          "secret": {
            "title": "Secret",
            "required": true,
            "sensitive": true,
            "type": "string"
          }
        }
      },
      "extends": [
        "SendGrid",
        "Mail",
        "tosca.nodes.Root",
        "tosca.capabilities.Node",
        "tosca.capabilities.Root"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {}
      },
      "requirements": [],
      "implementations": [
        "connect"
      ],
      "implementation_requirements": []
    },
    "unfurl.nodes.SQLWebApp": {
      "name": "unfurl.nodes.SQLWebApp",
      "title": "SQLWebApp",
      "description": "A web app that uses MongoDB",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {
          "subdomain": {
            "title": "Subdomain",
            "default": "www",
            "required": true,
            "user_settable": true,
            "type": "string"
          }
        }
      },
      "extends": [
        "unfurl.nodes.SQLWebApp",
        "unfurl.nodes.WebApp",
        "unfurl.nodes.ContainerApp",
        "unfurl.nodes.App",
        "tosca.nodes.Root",
        "tosca.capabilities.Node",
        "tosca.capabilities.Root"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {}
      },
      "requirements": [
        {
          "name": "db",
          "title": "Database",
          "description": "",
          "min": 1,
          "max": 1,
          "match": null,
          "resourceType": "SqlDB"
        },
        {
          "name": "container",
          "title": "container",
          "description": "",
          "min": 1,
          "max": 1,
          "match": null,
          "resourceType": "unfurl.nodes.ContainerService"
        }
      ],
      "implementations": [
        "create"
      ],
      "implementation_requirements": []
    },
    "SqlDB": {
      "name": "SqlDB",
      "title": "SqlDB",
      "description": "",
      "badge": "Database",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {
          "software_version": {
            "title": "Software Version",
            "type": "string"
          }
        }
      },
      "extends": [
        "SqlDB",
        "unfurl.nodes.SoftwareService",
        "tosca.nodes.Root",
        "tosca.capabilities.Node",
        "tosca.capabilities.Root"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {}
      },
      "requirements": [],
      "implementations": [],
      "implementation_requirements": []
    },
    "MySQLDB": {
      "name": "MySQLDB",
      "title": "MySQLDB",
      "description": "",
      "badge": "Database",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {
          "software_version": {
            "title": "Software Version",
            "type": "string"
          }
        }
      },
      "extends": [
        "MySQLDB",
        "unfurl.nodes.SoftwareService",
        "tosca.nodes.Root",
        "tosca.capabilities.Node",
        "tosca.capabilities.Root"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {}
      },
      "requirements": [],
      "implementations": [],
      "implementation_requirements": []
    },
    "MariaDBInstance": {
      "name": "MariaDBInstance",
      "title": "Self-hosted MariaDB",
      "description": "",
      "badge": "Database",
      "icon": "/onecommons/unfurl-types/-/raw/main/icons/MariaDBInstance.svg",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {
          "software_version": {
            "title": "Software Version",
            "type": "string"
          }
        }
      },
      "extends": [
        "MariaDBInstance",
        "MySQLDB",
        "unfurl.nodes.SoftwareService",
        "tosca.nodes.Root",
        "unfurl.nodes.ContainerApp",
        "unfurl.nodes.App",
        "tosca.capabilities.Node",
        "tosca.capabilities.Root"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {}
      },
      "requirements": [
        {
          "name": "container",
          "title": "container",
          "description": "",
          "visibility": "hidden",
          "min": 1,
          "max": 1,
          "match": "bitnami_mariadb_container_service",
          "resourceType": "unfurl.nodes.ContainerService"
        }
      ],
      "implementations": [
        "create"
      ],
      "implementation_requirements": []
    },
    "PostgresDB": {
      "name": "PostgresDB",
      "title": "PostgresDB",
      "description": "",
      "badge": "Database",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {
          "software_version": {
            "title": "Software Version",
            "type": "string"
          }
        }
      },
      "extends": [
        "PostgresDB",
        "unfurl.nodes.SoftwareService",
        "tosca.nodes.Root",
        "tosca.capabilities.Node",
        "tosca.capabilities.Root"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {}
      },
      "requirements": [],
      "implementations": [],
      "implementation_requirements": []
    },
    "PostgresDBInstance": {
      "name": "PostgresDBInstance",
      "title": "Self-hosted PostgresDB",
      "description": "",
      "badge": "Database",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {
          "software_version": {
            "title": "Software Version",
            "type": "string"
          }
        }
      },
      "extends": [
        "PostgresDBInstance",
        "PostgresDB",
        "unfurl.nodes.SoftwareService",
        "tosca.nodes.Root",
        "unfurl.nodes.ContainerApp",
        "unfurl.nodes.App",
        "tosca.capabilities.Node",
        "tosca.capabilities.Root"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {}
      },
      "requirements": [
        {
          "name": "container",
          "title": "container",
          "description": "",
          "visibility": "hidden",
          "min": 1,
          "max": 1,
          "match": "bitnami_postgres_container_service",
          "resourceType": "unfurl.nodes.ContainerService"
        }
      ],
      "implementations": [
        "create"
      ],
      "implementation_requirements": []
    },
    "unfurl.relationships.ConfiguredBy": {
      "name": "unfurl.relationships.ConfiguredBy",
      "title": "ConfiguredBy",
      "description": "",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {}
      },
      "extends": [
        "unfurl.relationships.ConfiguredBy",
        "tosca.relationships.Root"
      ]
    },
    "unfurl.relationships.ConnectsTo.DigitalOcean": {
      "name": "unfurl.relationships.ConnectsTo.DigitalOcean",
      "title": "DigitalOcean",
      "description": "",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {}
      },
      "extends": [
        "unfurl.relationships.ConnectsTo.DigitalOcean",
        "unfurl.relationships.ConnectsTo.CloudAccount",
        "tosca.relationships.ConnectsTo",
        "tosca.relationships.Root"
      ]
    },
    "unfurl.relationships.ConnectsTo.CloudAccount": {
      "name": "unfurl.relationships.ConnectsTo.CloudAccount",
      "title": "CloudAccount",
      "description": "",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {}
      },
      "extends": [
        "unfurl.relationships.ConnectsTo.CloudAccount",
        "tosca.relationships.ConnectsTo",
        "tosca.relationships.Root"
      ]
    },
    "tosca.relationships.ConnectsTo": {
      "name": "tosca.relationships.ConnectsTo",
      "title": "ConnectsTo",
      "description": "",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {}
      },
      "extends": [
        "tosca.relationships.ConnectsTo",
        "tosca.relationships.Root"
      ]
    },
    "unfurl.nodes.Repository": {
      "name": "unfurl.nodes.Repository",
      "title": "Repository",
      "description": "Reification of a TOSCA repository. Artifacts listed in the \"artifacts\" section of this node template will able available in the repository.\n",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {
          "repository": {
            "title": "repository",
            "description": "The name of the repository this node instance represent.",
            "type": "string"
          },
          "url": {
            "title": "url",
            "description": "The url of this repository",
            "type": "string"
          },
          "credential": {
            "title": "credential",
            "description": "The credential, if present, of the repository this node instance represents.\n",
            "sensitive": true,
            "$toscatype": "tosca.datatypes.Credential",
            "type": "object",
            "properties": {
              "protocol": {
                "title": "protocol",
                "type": "string"
              },
              "token_type": {
                "title": "token_type",
                "default": "password",
                "required": true,
                "type": "string"
              },
              "token": {
                "title": "token",
                "required": true,
                "type": "string"
              },
              "keys": {
                "title": "keys",
                "type": "object",
                "additionalProperties": {
                  "required": true,
                  "type": "string"
                }
              },
              "user": {
                "title": "user",
                "type": "string"
              },
              "$toscatype": {
                "const": "tosca.datatypes.Credential"
              }
            }
          }
        }
      },
      "extends": [
        "unfurl.nodes.Repository",
        "tosca.nodes.Root",
        "tosca.capabilities.Node",
        "tosca.capabilities.Root"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {}
      },
      "requirements": [],
      "implementations": [],
      "implementation_requirements": []
    },
    "unfurl.nodes.LocalRepository": {
      "name": "unfurl.nodes.LocalRepository",
      "title": "LocalRepository",
      "description": "Represents the collection of artifacts available to the local operation host.\n",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {
          "repository": {
            "title": "repository",
            "description": "The name of the repository this node instance represent.",
            "type": "string"
          },
          "url": {
            "title": "url",
            "description": "The url of this repository",
            "type": "string"
          },
          "credential": {
            "title": "credential",
            "description": "The credential, if present, of the repository this node instance represents.\n",
            "sensitive": true,
            "$toscatype": "tosca.datatypes.Credential",
            "type": "object",
            "properties": {
              "protocol": {
                "title": "protocol",
                "type": "string"
              },
              "token_type": {
                "title": "token_type",
                "default": "password",
                "required": true,
                "type": "string"
              },
              "token": {
                "title": "token",
                "required": true,
                "type": "string"
              },
              "keys": {
                "title": "keys",
                "type": "object",
                "additionalProperties": {
                  "required": true,
                  "type": "string"
                }
              },
              "user": {
                "title": "user",
                "type": "string"
              },
              "$toscatype": {
                "const": "tosca.datatypes.Credential"
              }
            }
          }
        }
      },
      "extends": [
        "unfurl.nodes.LocalRepository",
        "unfurl.nodes.Repository",
        "tosca.nodes.Root",
        "tosca.capabilities.Node",
        "tosca.capabilities.Root"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {}
      },
      "requirements": [],
      "implementations": [],
      "implementation_requirements": []
    },
    "unfurl.nodes.ArtifactBuilder": {
      "name": "unfurl.nodes.ArtifactBuilder",
      "title": "ArtifactBuilder",
      "description": "Creates or builds the given artifact and \"uploads\" it to the artifact's repository.\n",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {}
      },
      "extends": [
        "unfurl.nodes.ArtifactBuilder",
        "tosca.nodes.Root",
        "tosca.capabilities.Node",
        "tosca.capabilities.Root"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {}
      },
      "requirements": [],
      "implementations": [],
      "implementation_requirements": []
    },
    "unfurl.nodes.ArtifactInstaller": {
      "name": "unfurl.nodes.ArtifactInstaller",
      "title": "ArtifactInstaller",
      "description": "Reification of an artifact that needs to be installed. Node templates of this type are \"discovered\" when artifacts need to be installed on an operation_host.\n",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {}
      },
      "extends": [
        "unfurl.nodes.ArtifactInstaller",
        "tosca.nodes.Root",
        "tosca.capabilities.Node",
        "tosca.capabilities.Root"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {}
      },
      "requirements": [],
      "implementations": [
        "check",
        "configure",
        "create",
        "default",
        "delete",
        "start",
        "stop"
      ],
      "implementation_requirements": []
    },
    "unfurl.nodes.Installation": {
      "name": "unfurl.nodes.Installation",
      "title": "Installation",
      "description": "",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {}
      },
      "extends": [
        "unfurl.nodes.Installation",
        "tosca.nodes.Root",
        "tosca.capabilities.Node",
        "tosca.capabilities.Root"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {}
      },
      "requirements": [
        {
          "name": "installer",
          "title": "installer",
          "description": "",
          "min": 0,
          "max": 1,
          "match": null,
          "resourceType": "unfurl.nodes.Installer"
        }
      ],
      "implementations": [],
      "implementation_requirements": []
    },
    "unfurl.nodes.Default": {
      "name": "unfurl.nodes.Default",
      "title": "Default",
      "description": "Used if pre-existing instances are declared with no TOSCA template",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {}
      },
      "extends": [
        "unfurl.nodes.Default",
        "unfurl.nodes.Installation",
        "tosca.nodes.Root",
        "tosca.capabilities.Node",
        "tosca.capabilities.Root"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {}
      },
      "requirements": [
        {
          "name": "installer",
          "title": "installer",
          "description": "",
          "min": 0,
          "max": 1,
          "match": null,
          "resourceType": "unfurl.nodes.Installer"
        }
      ],
      "implementations": [
        "create"
      ],
      "implementation_requirements": []
    },
    "unfurl.nodes.CloudAccount": {
      "name": "unfurl.nodes.CloudAccount",
      "title": "CloudAccount",
      "description": "",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {}
      },
      "extends": [
        "unfurl.nodes.CloudAccount",
        "tosca.nodes.Root",
        "tosca.capabilities.Node",
        "tosca.capabilities.Root"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {
          "account_id": {
            "title": "account_id",
            "required": true,
            "description": "Cloud provider specific account identifier",
            "type": "string"
          }
        }
      },
      "requirements": [],
      "implementations": [],
      "implementation_requirements": []
    },
    "unfurl.nodes.CloudObject": {
      "name": "unfurl.nodes.CloudObject",
      "title": "CloudObject",
      "description": "",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {}
      },
      "extends": [
        "unfurl.nodes.CloudObject",
        "tosca.nodes.Root",
        "tosca.capabilities.Node",
        "tosca.capabilities.Root"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {
          "uri": {
            "title": "uri",
            "required": true,
            "description": "Unique identifier",
            "type": "string"
          },
          "name": {
            "title": "name",
            "required": true,
            "description": "Human-friendly name of the resource",
            "type": "string"
          },
          "console_url": {
            "title": "console_url",
            "description": "URL for viewing this resource in its cloud provider's console",
            "type": "string"
          }
        }
      },
      "requirements": [],
      "implementations": [],
      "implementation_requirements": []
    },
    "unfurl.nodes.AWSAccount": {
      "name": "unfurl.nodes.AWSAccount",
      "title": "AWSAccount",
      "description": "",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {}
      },
      "extends": [
        "unfurl.nodes.AWSAccount",
        "unfurl.nodes.CloudAccount",
        "tosca.nodes.Root",
        "tosca.capabilities.Node",
        "tosca.capabilities.Root"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {
          "account_id": {
            "title": "account_id",
            "required": true,
            "description": "Cloud provider specific account identifier",
            "type": "string"
          }
        }
      },
      "requirements": [],
      "implementations": [],
      "implementation_requirements": []
    },
    "unfurl.nodes.AWSResource": {
      "name": "unfurl.nodes.AWSResource",
      "title": "AWSResource",
      "description": "",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {}
      },
      "extends": [
        "unfurl.nodes.AWSResource",
        "unfurl.nodes.CloudObject",
        "tosca.nodes.Root",
        "tosca.capabilities.Node",
        "tosca.capabilities.Root"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {
          "uri": {
            "title": "uri",
            "required": true,
            "description": "Unique identifier",
            "type": "string"
          },
          "name": {
            "title": "name",
            "required": true,
            "description": "Human-friendly name of the resource",
            "type": "string"
          },
          "console_url": {
            "title": "console_url",
            "description": "URL for viewing this resource in its cloud provider's console",
            "type": "string"
          }
        }
      },
      "requirements": [
        {
          "name": "cloud",
          "title": "cloud",
          "description": "",
          "min": 0,
          "max": 1,
          "match": null,
          "resourceType": "unfurl.nodes.AWSAccount"
        }
      ],
      "implementations": [
        "create"
      ],
      "implementation_requirements": []
    },
    "unfurl.nodes.AzureAccount": {
      "name": "unfurl.nodes.AzureAccount",
      "title": "AzureAccount",
      "description": "",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {}
      },
      "extends": [
        "unfurl.nodes.AzureAccount",
        "unfurl.nodes.CloudAccount",
        "tosca.nodes.Root",
        "tosca.capabilities.Node",
        "tosca.capabilities.Root"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {
          "account_id": {
            "title": "account_id",
            "required": true,
            "description": "Cloud provider specific account identifier",
            "type": "string"
          }
        }
      },
      "requirements": [],
      "implementations": [],
      "implementation_requirements": []
    },
    "unfurl.nodes.AzureResource": {
      "name": "unfurl.nodes.AzureResource",
      "title": "AzureResource",
      "description": "",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {}
      },
      "extends": [
        "unfurl.nodes.AzureResource",
        "unfurl.nodes.CloudObject",
        "tosca.nodes.Root",
        "tosca.capabilities.Node",
        "tosca.capabilities.Root"
      ],
      "outputsSchema": {
        "type": "object",
        "properties": {
          "uri": {
            "title": "uri",
            "required": true,
            "description": "Unique identifier",
            "type": "string"
          },
          "name": {
            "title": "name",
            "required": true,
            "description": "Human-friendly name of the resource",
            "type": "string"
          },
          "console_url": {
            "title": "console_url",
            "description": "URL for viewing this resource in its cloud provider's console",
            "type": "string"
          }
        }
      },
      "requirements": [
        {
          "name": "cloud",
          "title": "cloud",
          "description": "",
          "min": 0,
          "max": 1,
          "match": null,
          "resourceType": "unfurl.nodes.AzureAccount"
        }
      ],
      "implementations": [
        "create"
      ],
      "implementation_requirements": []
    },
    "unfurl.relationships.InstalledBy": {
      "name": "unfurl.relationships.InstalledBy",
      "title": "InstalledBy",
      "description": "",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {}
      },
      "extends": [
        "unfurl.relationships.InstalledBy",
        "tosca.relationships.Root"
      ]
    },
    "unfurl.relationships.Configures": {
      "name": "unfurl.relationships.Configures",
      "title": "Configures",
      "description": "",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {}
      },
      "extends": [
        "unfurl.relationships.Configures",
        "tosca.relationships.Root"
      ]
    },
    "unfurl.relationships.ConfiguringHostedOn": {
      "name": "unfurl.relationships.ConfiguringHostedOn",
      "title": "ConfiguringHostedOn",
      "description": "",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {}
      },
      "extends": [
        "unfurl.relationships.ConfiguringHostedOn",
        "unfurl.relationships.Configures",
        "tosca.relationships.Root",
        "tosca.relationships.HostedOn"
      ]
    },
    "tosca.relationships.HostedOn": {
      "name": "tosca.relationships.HostedOn",
      "title": "HostedOn",
      "description": "",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {}
      },
      "extends": [
        "tosca.relationships.HostedOn",
        "tosca.relationships.Root"
      ]
    },
    "unfurl.relationships.ConnectsTo.Ansible": {
      "name": "unfurl.relationships.ConnectsTo.Ansible",
      "title": "Ansible",
      "description": "",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {
          "credential": {
            "title": "credential",
            "description": "Its \"user\" property sets \"ansible_user\", add properties like \"ssh_private_key_file\" to \"keys\"",
            "sensitive": true,
            "$toscatype": "tosca.datatypes.Credential",
            "type": "object",
            "properties": {
              "protocol": {
                "title": "protocol",
                "type": "string"
              },
              "token_type": {
                "title": "token_type",
                "default": "password",
                "required": true,
                "type": "string"
              },
              "token": {
                "title": "token",
                "required": true,
                "type": "string"
              },
              "keys": {
                "title": "keys",
                "type": "object",
                "additionalProperties": {
                  "required": true,
                  "type": "string"
                }
              },
              "user": {
                "title": "user",
                "type": "string"
              },
              "$toscatype": {
                "const": "tosca.datatypes.Credential"
              }
            }
          },
          "hostvars": {
            "title": "hostvars",
            "description": "Passed to ansible as host vars See https://docs.ansible.com/ansible/latest/user_guide/intro_inventory.html#connecting-to-hosts-behavioral-inventory-parameters\n",
            "type": "object"
          }
        }
      },
      "extends": [
        "unfurl.relationships.ConnectsTo.Ansible",
        "tosca.relationships.ConnectsTo",
        "tosca.relationships.Root"
      ]
    },
    "unfurl.relationships.ConnectsTo.Azure": {
      "name": "unfurl.relationships.ConnectsTo.Azure",
      "title": "Azure",
      "description": "",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {}
      },
      "extends": [
        "unfurl.relationships.ConnectsTo.Azure",
        "unfurl.relationships.ConnectsTo.CloudAccount",
        "tosca.relationships.ConnectsTo",
        "tosca.relationships.Root"
      ]
    },
    "unfurl.relationships.ConnectsTo.Packet": {
      "name": "unfurl.relationships.ConnectsTo.Packet",
      "title": "Packet",
      "description": "",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {
          "project": {
            "title": "project",
            "required": true,
            "description": "UUID to packet project",
            "type": "string"
          }
        }
      },
      "extends": [
        "unfurl.relationships.ConnectsTo.Packet",
        "unfurl.relationships.ConnectsTo.CloudAccount",
        "tosca.relationships.ConnectsTo",
        "tosca.relationships.Root"
      ]
    },
    "unfurl.relationships.ConnectsTo.OpenStack": {
      "name": "unfurl.relationships.ConnectsTo.OpenStack",
      "title": "OpenStack",
      "description": "",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {}
      },
      "extends": [
        "unfurl.relationships.ConnectsTo.OpenStack",
        "unfurl.relationships.ConnectsTo.CloudAccount",
        "tosca.relationships.ConnectsTo",
        "tosca.relationships.Root"
      ]
    },
    "unfurl.relationships.ConnectsTo.Rackspace": {
      "name": "unfurl.relationships.ConnectsTo.Rackspace",
      "title": "Rackspace",
      "description": "",
      "visibility": "inherit",
      "inputsSchema": {
        "type": "object",
        "properties": {}
      },
      "extends": [
        "unfurl.relationships.ConnectsTo.Rackspace",
        "unfurl.relationships.ConnectsTo.OpenStack",
        "unfurl.relationships.ConnectsTo.CloudAccount",
        "tosca.relationships.ConnectsTo",
        "tosca.relationships.Root"
      ]
    }
  }
}
